USE hotwaxAssignmentSQL;
CREATE TABLE Salespeople(
SNUM INT PRIMARY KEY,
SNAME VARCHAR(20) NOT NULL,
CITY VARCHAR(20) NOT NULL,
COMM INT NOT NULL
);

USE hotwaxAssignmentSQL;
CREATE TABLE Customers(
CNUM INT PRIMARY KEY,
CNAME VARCHAR(20) NOT NULL,
CITY VARCHAR(20) NOT NULL,
RATING INT NOT NULL,
SNUM INT NOT NULL,
FOREIGN KEY(SNUM)
REFERENCES salespeople(SNUM)
);

USE hotwaxAssignmentSQL;
INSERT INTO salespeople (SNUM,SNAME,CITY,COMM) VALUES 
(1002,"Serres","SanJose",13),
(1004,"Motika","London",11),
(1007,"Rifkin","Barcelona",15),
(1003,"AxelRod","New York",10),
(1008,"Fran","London",25);

INSERT INTO customers (CNUM,CNAME,CITY,RATING,SNUM) VALUES 
(2001,"Hoffman","London",100,1001),
(2002,"Giovanni","Rome",200,1003),
(2003,"Liu","SanJose",200,1002),
(2004,"Grass","Berlin",300,1002),
(2006,"Clemens","London",100,1001),
(2008,"Cisneros","SanJose",300,1007),
(2007,"Pereira","Rome",100,1004);


CREATE TABLE orders(
ONUM INT PRIMARY KEY,
AMT NUMERIC(8,2) NOT NULL,
ODATE DATE NOT NULL,
CNUM INT NOT NULL,
SNUM INT NOT NULL,
FOREIGN KEY(CNUM)
REFERENCES customers(CNUM)
);
INSERT INTO orders (ONUM,AMT,ODATE,CNUM,SNUM) VALUES
 (3001,18.69,10/03/90,2008,1007),
 (3003,767.19,10/03/90,2001,1001),
 (3002,1900.10,10/03/90,2007,1004),
 (3005,5160.45,10/03/90,2003,1002),
 (3006,1098.16,10/03/90,2008,1007),
 (3009,1713.23,10/04/90,2002,1003),
 (3007,75.75,10/04/90,2004,1002),
 (3008,4723.00,10/05/90,2006,1001),
 (3010,1309.95,10/06/90,2004,1002),
 (3011,9891.88,10/06/90,2006,1001);
 

1) List all the columns of the Salespeople table.
SELECT * FROM salespeople;

1001	Peel	London	      12
1002	Serres	SanJose	      13
1003	AxelRod	New York      10
1004	Motika	London	      11
1007	Rifkin	Barcelona     15
1008	Fran	London	      25

2) List all customers with a rating of 100.
SELECT * FROM customers where RATING=100;

2001	Hoffman	London	100	1001
2006	Clemens	London	100	1001
2007	Pereira	Rome	100	1004

3) Find the largest order taken by each salesperson on each date.
select a.onum,max(a.amt),a.odate,a.cnum,b.snum 
from orders a,customers b 
where a.cnum=b.cnum 
group by snum,a.odate;

3003	767.19	1990-03-10	2001	1001
3008	4723.00	1990-05-10	2006	1001
3011	9891.88	1990-06-10	2006	1001
3005	5160.45	1990-03-10	2003	1002
3007	75.75	1990-04-10	2004	1002
3010	1309.95	1990-06-10	2004	1002
3009	1713.23	1990-04-10	2002	1003
3002	1900.10	1990-03-10	2007	1004
3001	1098.16	1990-03-10	2008	1007

4) Arrange the Order table by descending customer number.
SELECT * FROM orders ORDER BY CNUM;

3003	767.19	1990-03-10	2001	1001
3009	1713.23	1990-04-10	2002	1003
3005	5160.45	1990-03-10	2003	1002
3007	75.75	1990-04-10	2004	1002
3010	1309.95	1990-06-10	2004	1002
3008	4723.00	1990-05-10	2006	1001
3011	9891.88	1990-06-10	2006	1001
3002	1900.10	1990-03-10	2007	1004
3001	18.69	1990-03-10	2008	1007
3006	1098.16	1990-03-10	2008	1007

5) Find which salespeople currently have orders in the order table.
SELECT distinct salespeople.SNUM, salespeople.SNAME
from salespeople
INNER JOIN orders
ON salespeople.SNUM = orders.SNUM

1007	Rifkin
1004	Motika
1001	Peel
1002	Serres
1003	AxelRod

6) List names of all customers matched with the salespeople serving them.
select customers.CNUM,customers.CNAME, salespeople.SNAME
from customers
INNER JOIN salespeople
ON customers.SNUM= salespeople.SNUM;

2001	Hoffman	   Peel
2002	Giovanni   AxelRod
2003	Liu	   Serres
2004	Grass	   Serres
2006	Clemens	   Peel
2007	Pereira	   Motika
2008	Cisneros   Rifkin	

7) Find the names and numbers of all salespeople who have more than one customer.			
SELECT s.SNUM, s.SNAME 
FROM salespeople s 
WHERE  1 < 
    (SELECT COUNT(*) 
     FROM customers c
     WHERE s.SNUM=c.SNUM);

8) Count the orders of each of the salespeople and output the results in descending order.
SELECT COUNT(ONUM),SNUM
FROM orders group by SNUM order by count(ONUM) DESC;

3	1001
3	1002
2	1007


9) List the customer table if and only if one or more of the customers in the Customer table are located in SanJose.
SELECT * FROM customers
where CITY in (select CITY from customers
where CITY ="SanJose"
group by CITY 
having COUNT(CITY)>1);

2003	Liu	  SanJose  200	1002
2008	Cisneros  SanJose  300	1007

10) Match salespeople to customers according to what city they live in.
Select salespeople.SNAME, customers.CNAME, salespeople.CITY
from salespeople
INNER JOIN customers
ON customers.CITY = salespeople.CITY;

Fran	Hoffman	London
Motika	Hoffman	London
Peel	Hoffman	London
Serres	Liu	SanJose
Fran	Clemens	London
Motika	Clemens	London
Peel	Clemens	London
Serres	CisnerosSanJose	

11) Find all the customers in SanJose who have a rating above 200.
Select * from customers where city ="SanJose" AND RATING>200;

2008	Cisneros	SanJose	300	1007


12) List the names and commissions of all salespeople in London.
SELECT salespeople.SNAME, orders.AMT
from salespeople
INNER JOIN orders
ON salespeople.SNUM = orders.SNUM AND salespeople.CITY="London";

Motika	1900.10
Peel	767.19
Peel	4723.00
Peel	9891.88

13) List all the orders of Salesperson Motika from the orders table.
select * from orders
INNER JOIN salespeople
ON orders.SNUM = salespeople.SNUM where salespeople.SNAME="Motika"

3002	1900.10	1990-03-10	2007	1004	1004	Motika	London	11

14) Find all customers who booked orders on October 3.
select distinct customers.CNUM,customers.CNAME,orders.ODATE from customers
INNER JOIN orders
ON orders.CNUM = customers.CNUM where orders.ODATE="1990-03-10";

2008	Cisneros1990-03-10
2007	Pereira	1990-03-10
2001	Hoffman	1990-03-10
2003	Liu	1990-03-10

15) Give the sums of the amounts from the Orders table, grouped by date, eliminating all those dates where the SUM was not at least 2000 above




16) Select all orders that had amounts that were greater than at least one of the orders from October 6.
SELECT * FROM orders
WHERE AMT > ANY(
SELECT AMT 
FROM orders
WHERE ODATE="1990-06-10");

3002	1900.10	1990-03-10	2007	1004
3005	5160.45	1990-03-10	2003	1002
3008	4723.00	1990-05-10	2006	1001
3009	1713.23	1990-04-10	2002	1003
3011	9891.88	1990-06-10	2006	1001
				

17) Write a query that uses the EXISTS operator to extract all salespeople who have customers with a rating of 300.




18) Find all customers whose cnum is 1000 above the snum of Serres.
select CNUM,CNAME 
from customers
where CNUM > 2002;

2003	Liu
2004	Grass
2006	Clemens
2007	Pereira
2008	Cisneros
	

19) Give the salespeople’s commissions as percentages instead of decimal numbers.
SELECT SNUM,COMM/100 from salespeople;

1001	0.1200
1002	0.1300
1003	0.1000
1004	0.1100
1007	0.1500
1008	0.2500

20) Find the largest order taken by each salesperson on each date, eliminating those Maximum orders, which are less than 3000.




21) List all the largest orders for October 3, for each salesperson.
SELECT ONUM,SNUM,ODATE,MAX(AMT) 
FROM orders
WHERE ODATE="1990-03-10"
GROUP BY SNUM 
ORDER BY SNUM;

3003	1001	1990-03-10	767.19
3005	1002	1990-03-10	5160.45
3002	1004	1990-03-10	1900.10
3001	1007	1990-03-10	1098.16

22) Find all customers located in cities where Serres has customers.
SELECT customers.CNUM, customers.CNAME
from customers
INNER JOIN salespeople
ON customers.SNUM = salespeople.SNUM where salespeople.SNAME="Serres" 

2003	Liu
2004	Grass

23) Select all customers with a rating above 200.
SELECT * from customers where RATING>200 

2004	Grass	Berlin	300	1002
2008	CisnerosSanJose	300	1007


24) Count the number of salespeople currently having orders in the orders table.
SELECT COUNT(DISTINCT SNUM)
FROM orders

5

25) Write a query that produces all customers serviced by salespeople with a commission above 12%. Output the customer’s name,
salesperson’s name and the salesperson’s rate of commission.

SELECT customers.CNAME, salespeople.SNAME, salespeople.COMM
from customers
INNER JOIN salespeople
ON customers.SNUM= salespeople.SNUM where salespeople.COMM >12;


Liu	 Serres	13
Grass	 Serres	13
Cisneros Rifkin	15

26) Find salespeople who have multiple customers.

SELECT salespeople.SNAME, salespeople.SNUM
from salespeople
INNER JOIN customers
ON customers.SNUM= salespeople.SNUM GROUP BY customers.SNUM HAVING COUNT(customers.SNUM)>1;

Peel	1001
Serres	1002

27) Find salespeople with customers located in their own cities.
select distinct salespeople.SNUM, salespeople.SNAME 
from salespeople
INNER JOIN customers
ON customers.SNUM = salespeople.SNUM where customers.CITY = salespeople.CITY

1001	Peel
1002	Serres


28) Find all salespeople whose name starts with ‘P’ and fourth character is ‘I’.
select * FROM salespeople
WHERE SNAME LIKE "P___I%"

29) Write a query that uses a subquery to obtain all orders for the customer named ‘Cisneros’. Assume you do not know his customer number.
select a.cname,b.onum from customer a, orders b where a.cnum=b.cnum and a.cname='cisneros' order by a.cname;

Cisneros	3001
Cisneros	3006

30) Find the largest orders for Serres and Rifkin.





31) Sort the salespeople table in the following order: snum, sname, commission, city.
select snum,sname,comm,city from salespeople

1001	Peel	12	London
1002	Serres	13	SanJose
1003	AxelRod	10	New York
1004	Motika	11	London
1007	Rifkin	15	Barcelona
1008	Fran	25	London

32) Select all customers whose names fall in between ‘A’ and ‘G’ alphabetical range.
select CNAME from customers where CNAME like "a%g"

33) Select all the possible combinations of customers you can assign.

34) Select all orders that are greater than the average for October 4.
SELECT * FROM hotwaxassignmentsql.orders
WHERE AMT > (
SELECT AVG(AMT) FROM hotwaxassignmentsql.orders
 WHERE ODATE="1990-04-10")

3002	1900.10	1990-03-10	2007	1004
3005	5160.45	1990-03-10	2003	1002
3006	1098.16	1990-03-10	2008	1007
3008	4723.00	1990-05-10	2006	1001
3009	1713.23	1990-04-10	2002	1003
3010	1309.95	1990-06-10	2004	1002
3011	9891.88	1990-06-10	2006	1001

35) Write a select command using correlated subquery that selects the names and numbers of all customers with ratings equal to the maximum for their city?





36) Write a query that totals the orders for each day and places the results in descending order.
SELECT COUNT(ONUM), ODATE FROM hotwaxassignmentsql.orders
GROUP BY ODATE ORDER BY COUNT(ONUM) DESC;

5	1990-03-10
2	1990-04-10
2	1990-06-10
1	1990-05-10

37) Write a select command that produces the rating followed by the name of each customer in SanJose.
SELECT RATING,CNAME FROM hotwaxassignmentsql.customers
WHERE city ="SanJose"

200	Liu
300	Cisneros

38) Find all orders with amounts smaller than any amount for a customer in SanJose.
select * from orders where AMT< ANY (SELECT AMT
FROM orders a
INNER JOIN customers b
ON a.CNUM=b.CNUM WHERE CITY="SanJose");

3001	18.69	1990-03-10	2008	1007
3002	1900.10	1990-03-10	2007	1004
3003	767.19	1990-03-10	2001	1001
3006	1098.16	1990-03-10	2008	1007
3007	75.75	1990-04-10	2004	1002
3008	4723.00	1990-05-10	2006	1001
3009	1713.23	1990-04-10	2002	1003
3010	1309.95	1990-06-10	2004	1002

39) Find all orders with above average amounts for their customers.





40) Write a query that selects the highest rating in each city.
SELECT CITY, MAX(RATING) FROM customers GROUP BY CITY;

Berlin	300
London	100
Rome	200
SanJose	300

41) Write a query that calculates the amount of the salesperson’s commission on each order by a customer with a rating above 100.00.


42) Count the customers with ratings above SanJose’s average.
SELECT *
FROM customers
WHERE RATING >(
SELECT AVG(RATING) FROM customers
WHERE CITY="SanJose");

2004	Grass	 Berlin	   300	1002
2008	Cisneros SanJose   300	1007
				
43) Find all salespeople that are located in either Barcelona or London.
SELECT * FROM salespeople WHERE CITY IN ("London","Barcelona");

1001	Peel	  London	12
1004	Motika	  London	11
1007	Rifkin	  Barcelona	15
1008	Fran	  London	25
			

44) Find all salespeople with only one customer.
select a.sname,a.snum 
from salespeople a,(
select snum,count(*) as cust_count 
from customers group by snum 
having cust_count=1) b where a.snum=b.snum;

AxelRod	1003
Motika	1004
Rifkin	1007

45) Write a query that joins the Customer table to itself to find all pairs or customers served by a single salesperson.


46) Write a query that will give you all orders for more than $1000.00.
select * from orders where AMT> 1000;

3002	1900.10	1990-03-10	2007	1004
3005	5160.45	1990-03-10	2003	1002
3006	1098.16	1990-03-10	2008	1007
3008	4723.00	1990-05-10	2006	1001
3009	1713.23	1990-04-10	2002	1003
3010	1309.95	1990-06-10	2004	1002
3011	9891.88	1990-06-10	2006	1001
				
47) Write a query that lists each order number followed by the name of the customer who made that order.
SELECT ONUM, CNAME
FROM orders a
INNER JOIN customers b
ON a.CNUM=b.CNUM 

3003	Hoffman
3009	Giovanni
3005	Liu
3007	Grass
3010	Grass
3008	Clemens
3011	Clemens
3002	Pereira
3001	Cisneros
3006	Cisneros

48) Write a query that selects all the customers whose ratings are equal to or greater than ANY(in the SQL sense) of ‘Serres’.






49) Write two queries that will produce all orders taken on October 3 or October 4.
SELECT * FROM orders WHERE ODATE IN ("1990-03-10","1990-04-10");

3001	18.69	1990-03-10	2008	1007
3002	1900.10	1990-03-10	2007	1004
3003	767.19	1990-03-10	2001	1001
3005	5160.45	1990-03-10	2003	1002
3006	1098.16	1990-03-10	2008	1007
3007	75.75	1990-04-10	2004	1002
3009	1713.23	1990-04-10	2002	1003
				

50) Find only those customers whose ratings are higher than every customer in Rome.
SELECT *
FROM customers a
WHERE RATING > ALL(SELECT RATING FROM customers WHERE CITY="Rome");

2004	Grass	     Berlin	300	1002
2008	Cisneros     SanJose	300	1007

51) Write a query on the Customers table whose output will exclude all customers with a rating<= 100.00, unless they are located in Rome.
SELECT *
FROM customers
WHERE RATING >=100 OR CITY LIKE "Rome";

2001	Hoffman	        London	100	1001
2002	Giovanni	Rome	200	1003
2003	Liu	        SanJose	200	1002
2004	Grass	        Berlin	300	1002
2006	Clemens	        London	100	1001
2007	Pereira	        Rome	100	1004
2008	Cisneros	SanJose	300	1007
				

52) Find all rows from the customer’s table for which the salesperson number is 1001.
SELECT *
FROM customers
WHERE SNUM=1001;

2001	Hoffman	London	100	1001
2006	Clemens	London	100	1001
				

53) Find the total amount in orders for each salesperson where their total of amounts are greater than the amount of the largest order in the table.






54) Write a query that selects all orders save those with zeroes or NULL in the amount file.
SELECT * FROM orders WHERE AMT IS NULL OR AMT=0 				

	
56) Find all salespeople name and commission.
SELECT SNAME,COMM FROM salespeople

Peel	12
Serres	13
AxelRod	10
Motika	11
Rifkin	15
Fran	25

57) Write a query that produces the names and cities of all customers with the same rating as Hoffman. Write the query using Hoffman’s cnum
SELECT *
FROM customers
WHERE RATING = (SELECT CNUM AS num FROM customers WHERE CNAME="Hoffman")

2001	Hoffman	London	100	1001
2006	Clemens	London	100	1001
2007	Pereira	Rome	100	1004
				
58) Find all salespeople for whom there are customers that follow them in alphabetical order.





59) Write a query that produces the names and ratings of all customers who have average orders.
SELECT CNAME,RATING
FROM customers a
INNER JOIN orders b
ON a.CNUM=b.CNUM 
WHERE AMT > ( 
SELECT AVG(AMT) FROM orders)
GROUP BY CNAME;

Liu	200
Clemens	100

60) Find the SUM of all Amounts from the orders table.
SELECT SUM(AMT) FROM orders;

26658.40


61) Write a SELECT command that produces the order number, amount, and the date from rows in the order table.	
SELECT ONUM,AMT,ODATE 
FROM 
orders;			

3001	18.69	1990-03-10
3002	1900.10	1990-03-10
3003	767.19	1990-03-10
3005	5160.45	1990-03-10
3006	1098.16	1990-03-10
3007	75.75	1990-04-10
3008	4723.00	1990-05-10
3009	1713.23	1990-04-10
3010	1309.95	1990-06-10
3011	9891.88	1990-06-10
		
62) Count the number of non NULL rating fields in the Customers table (including repeats).
SELECT COUNT(DISTINCT RATING) FROM customers
WHERE RATING IS NOT NULL;

3

63) Write a query that gives the names of both the salesperson and the customer for each order after the order number.
SELECT ONUM,
       a.SNAME,
       b.CNAME
FROM orders
JOIN salespeople a
ON a.SNUM = orders.SNUM
JOIN customers b
ON b.CNUM=orders.CNUM;

3001	Rifkin	Cisneros
3002	Motika	Pereira
3003	Peel	Hoffman
3005	Serres	Liu
3006	Rifkin	Cisneros
3007	Serres	Grass
3008	Peel	Clemens
3009	AxelRod	Giovanni
3010	Serres	Grass
3011	Peel	Clemens

64) List the commissions of all salespeople servicing customers in London.
SELECT 
DISTINCT a.SNUM,
         COMM,
         SNAME
FROM salespeople a
JOIN customers b
ON a.SNUM = b.SNUM
WHERE b.CITY="London";

1001	12	Peel



65) Write a query using ANY or ALL that will find all salespeople who have no customers located in their city.





67) Write a query that selects all customers serviced by Peel or Motika. (Hint: The snum field relates the 2 tables to one another.)
SELECT * FROM customers a
INNER JOIN salespeople b
ON a.SNUM= b.SNUM
WHERE SNAME IN ("Motika","Peel");

2001	Hoffman	London	100	1001	1001	Peel	London	12
2006	Clemens	London	100	1001	1001	Peel	London	12
2007	Pereira	Rome	100	1004	1004	Motika	London	11



68) Count the number of salespeople registering orders for each day. (If a salesperson has more than one order on a given day, he or she should
be counted only once.)




69) Find all orders attributed to salespeople who live in London.
SELECT ONUM,AMT,ODATE,orders.SNUM,SNAME FROM orders
JOIN salespeople
ON orders.SNUM=salespeople.SNUM
WHERE salespeople.CITY="London";

3002	1900.10	1990-03-10	1004	Motika
3003	767.19	1990-03-10	1001	Peel
3008	4723.00	1990-05-10	1001	Peel
3011	9891.88	1990-06-10	1001	Peel

70) Find all orders by customers not located in the same cities as their salespeople.
SELECT ONUM,b.SNUM,b.CITY AS salespeopleCity ,c.CITY AS customerCity 
FROM orders a
JOIN salespeople b
ON a.SNUM = b.SNUM
JOIN customers c 
ON a.CNUM = c.CNUM
WHERE b.CITY!=c.CITY;

3001	1007	Barcelona	SanJose
3002	1004	London	        Rome
3006	1007	Barcelona	SanJose
3007	1002	SanJose	        Berlin
3009	1003	New York	Rome
3010	1002	SanJose	        Berlin

71) Find all salespeople who have customers with more than one current order.
SELECT a.SNUM,SNAME,COUNT(b.SNUM) AS noOfOrders
FROM orders b
JOIN salespeople a
ON a.SNUM=b.SNUM
GROUP BY b.SNUM HAVING noOfOrders>1;

1007	Rifkin	2
1001	Peel	3
1002	Serres	3

72) Write a query that extracts from the customer’s table every customer assigned to a salesperson, who is currently having at least one another
customer(besides the customer being selected) with orders in the Orders Table.



73) Write a query on the customer’s table that will find the highest rating in each city. Put the output in this form: for the city (city), the highest
rating is (rating).
SELECT CITY,MAX(RATING) FROM customers GROUP BY CITY;

London	100
Rome	200
SanJose	300
Berlin	300

74) Write a query that will produce the snum values of all salespeople with orders, having amt greater than 1000 in the Orders Table(without
repeats).
SELECT DISTINCT ONUM,a.SNUM,AMT
FROM salespeople a
JOIN orders b
ON a.SNUM=b.SNUM
WHERE AMT>1000;

3002	1004	1900.10
3005	1002	5160.45
3006	1007	1098.16
3008	1001	4723.00
3009	1003	1713.23
3010	1002	1309.95
3011	1001	9891.88


75) Write a query that lists customers in a descending order of rating. Output the rating field first, followed by the customer’s names and numbers.
SELECT RATING,CNAME,CNUM FROM customers ORDER BY RATING DESC

300	Grass	        2004
300	Cisneros	2008
200	Giovanni	2002
200	Liu	        2003
100	Hoffman	        2001
100	Clemens	        2006
100	Pereira	        2007

76) Find the average commission for salespeople in London.
SELECT AVG(COMM) FROM salespeople WHERE CITY="London";

16.0000

77) Find all orders credited to the same salesperson who services Hoffman.(cnum 2001).
SELECT * FROM orders 
WHERE SNUM =(
SELECT SNUM FROM orders 
WHERE CNUM=2001);

3003	767.19	1990-03-10	2001	1001
3008	4723.00	1990-05-10	2006	1001
3011	9891.88	1990-06-10	2006	1001
				

78) Find all salespeople whose commission is in between 0.10 and 0.12(both inclusive).
SELECT * FROM salespeople
WHERE COMM BETWEEN 10 AND 12;

1001	Peel	London   12
1003	AxelRod	New York 10
1004	Motika	London	 11
			

79) Write a query that will give you the names and cities of all salespeople in London with a commission above 0.10.
SELECT SNAME,CITY,COMM 
FROM salespeople
WHERE CITY="London" AND COMM > 10;

Peel	London	12
Motika	London	11
Fran	London	25
	
			


			

